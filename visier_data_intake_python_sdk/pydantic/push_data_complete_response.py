# coding: utf-8

"""
    Visier Data Intake APIs

    Visier APIs for sending raw or untransformed source data to Visier

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from visier_data_intake_python_sdk.pydantic.data_transfer_result_detail import DataTransferResultDetail

class PushDataCompleteResponse(BaseModel):
    # The unique identifier associated with the receiving job.
    data_receiving_job_id: typing.Optional[str] = Field(None, alias='dataReceivingJobId')

    # A meaningful message about the transfer session.
    message: typing.Optional[str] = Field(None, alias='message')

    # The unique identifier associated with the transfer session.
    transfer_session_id: typing.Optional[str] = Field(None, alias='transferSessionId')

    # A list of objects representing the results of the transfer session.
    data_transfer_result_details: typing.Optional[typing.List[DataTransferResultDetail]] = Field(None, alias='dataTransferResultDetails')

    # The status of the transfer session. A completed session returns the status SUCCEED.
    status: typing.Optional[str] = Field(None, alias='status')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )

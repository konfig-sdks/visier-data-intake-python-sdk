# coding: utf-8

"""
    Visier Data Intake APIs

    Visier APIs for sending raw or untransformed source data to Visier

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from visier_data_intake_python_sdk.pydantic.push_data_column_definition_dto_data_formats import PushDataColumnDefinitionDTODataFormats

class PushDataColumnDefinitionDTO(BaseModel):
    # The name of the column.
    column_name: typing.Optional[str] = Field(None, alias='columnName')

    # The data type associated with the column.
    data_type: typing.Optional[str] = Field(None, alias='dataType')

    data_formats: typing.Optional[PushDataColumnDefinitionDTODataFormats] = Field(None, alias='dataFormats')

    # If true, the column value is required. If a column is mandatory, and the file is missing this column, the request will fail.
    is_mandatory: typing.Optional[bool] = Field(None, alias='isMandatory')

    # If true, the column allows an empty value for the record.
    allow_empty: typing.Optional[bool] = Field(None, alias='allowEmpty')

    # The default value of the column.
    default_value: typing.Optional[str] = Field(None, alias='defaultValue')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )

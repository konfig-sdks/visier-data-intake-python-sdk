# coding: utf-8

"""
    Visier Data Intake APIs

    Visier APIs for sending raw or untransformed source data to Visier

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class Source(BaseModel):
    # The unique identifier associated with the source that data was transferred to.
    source_id: typing.Optional[str] = Field(None, alias='sourceId')

    # The object name of the source.
    source_name: typing.Optional[str] = Field(None, alias='sourceName')

    # The size of the data transfer in bytes.
    data_size: typing.Optional[str] = Field(None, alias='dataSize')

    # The number of rows in the data transfer.
    rows: typing.Optional[str] = Field(None, alias='rows')

    # The status of the data transfer for this source.
    status: typing.Optional[str] = Field(None, alias='status')

    # A meaningful message about the data transfer.
    message: typing.Optional[str] = Field(None, alias='message')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
